{"version":3,"sources":["App.js","serviceWorker.js","index.js","logo.png"],"names":["uuid","require","Search","Input","App","useState","result","setResult","radio","setRadio","print","setPrint","modal","setModal","setting","setSetting","loading","setLoading","error","setError","handleOk","e","flag","handleCancel","compare","a","b","bandA","score","bandB","comparison","useEffect","setTimeout","status","title","subTitle","undefined","console","log","f","sort","map","item","v4","key","onClick","showModal","className","type","shape","icon","visible","footer","onCancel","axios","get","then","response","message","showIcon","catch","description","width","height","src","logo","alt","placeholder","enterButton","size","onSearch","value","Qtype","Object","values","data","search","Group","onChange","target","onOk","href","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.8e4ed972.chunk.js","sourcesContent":["import React, { useState,useEffect } from 'react';\nimport logo from './logo.png';\nimport axios from 'axios';\nimport './App.css';\nimport { Input,Result,Radio,Modal,Button,Alert } from 'antd';\nvar uuid = require('uuid');\nconst { Search } = Input;\n\n\nfunction App() {\n  const [result,setResult] = useState({});\n  const [radio,setRadio] = useState({\"value\":1});\n  const [print,setPrint] = useState();\n  const [modal,setModal] = useState([\"NULL\",false,\"NULL\"]);\n  const [setting,setSetting] = useState([false,false]);\n  const [loading,setLoading] = useState(false)\n  const [error,setError] = useState(\"\")\n\n  const search = e =>{\n    let Qtype = \"phrase\";\n    if(radio['value']===2){\n      Qtype = \"ftq\"\n    }\n    axios.get('https://msh-google.herokuapp.com/query?type='+Qtype+'&text='+e).then(response => {\n      setResult(Object.values(response.data))\n    })\n  }\n  const onChange = e => {\n    console.log('radio checked', e.target.value);\n    setRadio({\n      value: e.target.value,\n    });\n    setPrint(\"\")\n  };\n\n  const handleOk = (e,flag=false) => {\n    if (flag){\n      setSetting([false,false]);\n    }else{\n      setModal(['',false,'']);\n    }\n  };\n\n  const handleCancel = (e,flag=false) => {\n    if (flag){\n      setSetting([false,false]);\n    }else{\n      setModal(['',false,'']);\n    }\n  };\n\n  const showModal = item =>{\n    let score = \" \"\n    if(item['score']!== undefined){\n      score = \"score : \" + item['score']\n    }\n    setModal([item['title'],true,item['text'],score,item['src']])\n  }\n  const showSetting = e => {\n    setSetting([true,false])\n  }\n  const updateIndex = e => {\n    setLoading(true)\n    axios.get('http://localhost:7082/update')\n    .then(response => {\n        setLoading(false)\n        setError(<Alert message=\"Success\" type=\"success\" showIcon />)\n    })\n    .catch(e => {\n        setError(\n          <Alert\n            message=\"Error\"\n            description=\"Server Error 500\"\n            type=\"error\"\n            showIcon\n          />\n        )\n    });\n  }\n  function compare(a, b) {\n    const bandA = a.score;\n    const bandB = b.score;\n    let comparison = 0;\n    if (bandA > bandB) {\n      comparison = -1;\n    } else if (bandA < bandB) {\n      comparison = 1;\n    }\n    return comparison;\n  }  \n  useEffect(()=>{\n    setTimeout(function(){\n      setError(\"\")\n      setLoading(false)\n    }, 2000);\n  },[error])\n  useEffect(()=>{\n    if (result[0] === \"500\"){\n      setPrint(\n        <Result\n            status=\"404\"\n            title=\"دور تانى كدا\"\n            subTitle=\"\"\n            // extra={<Button type=\"primary\">Back Home</Button>}\n        />\n      )\n    }\n    else if (result[0]!==undefined){\n      console.log(result);\n      let f =result.sort(compare);\n      console.log(f);\n      setPrint(\n        f.map((item) => {\n          item['key'] =uuid.v4()\n          return <li key={item['key']} onClick={()=>showModal(item)} ><a>{item['title']}</a></li>\n\n        })\n      );\n    }\n  },[result]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"topBar\">\n        <Button type=\"primary\" shape=\"circle\" icon=\"setting\" onClick={showSetting}/>\n        <Modal\n          title={\"Setting\"}\n          visible={setting[0]}\n          footer={[<Button key=\"submit\" type=\"primary\" onClick={e=>{handleOk(e,true)}}>\n            Ok\n          </Button>]}\n          onCancel={e=>{handleCancel(e,true)}}\n        >\n          <Button type=\"primary\" loading={loading} onClick={updateIndex}>\n            Refresh Indexed text\n          </Button>\n          {error}\n        </Modal>\n      </div>\n      <div className=\"content\">\n        <img width=\"60%\" height=\"20%\" src={logo}  alt=\"logo\" />\n        <Search\n          className=\"bar\"\n          placeholder=\"input search text\"\n          enterButton=\"Search\"\n          size=\"large\"\n          onSearch={value => search(value)}\n        />\n        <Radio.Group onChange={onChange} value={radio['value']}>\n        <Radio value={1}>Phrase</Radio>\n        <Radio value={2}>Free Text</Radio>\n      </Radio.Group>\n        \n        {print}\n        <Modal\n          title={modal[0]}\n          visible={modal[1]}\n          onOk={handleOk}\n          onCancel={handleCancel}\n          footer={null}\n        >\n          <p>{modal[2]}</p>\n          <footer>{modal[3]}</footer>\n          <footer>src: <a target=\"_blank\" href={modal[4]}>Here</a></footer>\n        </Modal>\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/logo.1a7223f7.png\";"],"sourceRoot":""}